// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChainlinkCallbackTimeout extends ethereum.Event {
  get params(): ChainlinkCallbackTimeout__Params {
    return new ChainlinkCallbackTimeout__Params(this);
  }
}

export class ChainlinkCallbackTimeout__Params {
  _event: ChainlinkCallbackTimeout;

  constructor(event: ChainlinkCallbackTimeout) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get order(): ChainlinkCallbackTimeoutOrderStruct {
    return changetype<ChainlinkCallbackTimeoutOrderStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class ChainlinkCallbackTimeoutOrderStruct extends ethereum.Tuple {
  get trade(): ChainlinkCallbackTimeoutOrderTradeStruct {
    return changetype<ChainlinkCallbackTimeoutOrderTradeStruct>(
      this[0].toTuple()
    );
  }

  get block(): BigInt {
    return this[1].toBigInt();
  }

  get wantedPrice(): BigInt {
    return this[2].toBigInt();
  }

  get slippageP(): BigInt {
    return this[3].toBigInt();
  }

  get spreadReductionP(): BigInt {
    return this[4].toBigInt();
  }

  get tokenId(): BigInt {
    return this[5].toBigInt();
  }
}

export class ChainlinkCallbackTimeoutOrderTradeStruct extends ethereum.Tuple {
  get trader(): Address {
    return this[0].toAddress();
  }

  get pairIndex(): BigInt {
    return this[1].toBigInt();
  }

  get index(): BigInt {
    return this[2].toBigInt();
  }

  get initialPosToken(): BigInt {
    return this[3].toBigInt();
  }

  get positionSizeDai(): BigInt {
    return this[4].toBigInt();
  }

  get openPrice(): BigInt {
    return this[5].toBigInt();
  }

  get buy(): boolean {
    return this[6].toBoolean();
  }

  get leverage(): BigInt {
    return this[7].toBigInt();
  }

  get tp(): BigInt {
    return this[8].toBigInt();
  }

  get sl(): BigInt {
    return this[9].toBigInt();
  }
}

export class CouldNotCloseTrade extends ethereum.Event {
  get params(): CouldNotCloseTrade__Params {
    return new CouldNotCloseTrade__Params(this);
  }
}

export class CouldNotCloseTrade__Params {
  _event: CouldNotCloseTrade;

  constructor(event: CouldNotCloseTrade) {
    this._event = event;
  }

  get trader(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pairIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Done extends ethereum.Event {
  get params(): Done__Params {
    return new Done__Params(this);
  }
}

export class Done__Params {
  _event: Done;

  constructor(event: Done) {
    this._event = event;
  }

  get done(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class MarketOrderInitiated extends ethereum.Event {
  get params(): MarketOrderInitiated__Params {
    return new MarketOrderInitiated__Params(this);
  }
}

export class MarketOrderInitiated__Params {
  _event: MarketOrderInitiated;

  constructor(event: MarketOrderInitiated) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get trader(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pairIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get open(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class NftOrderInitiated extends ethereum.Event {
  get params(): NftOrderInitiated__Params {
    return new NftOrderInitiated__Params(this);
  }
}

export class NftOrderInitiated__Params {
  _event: NftOrderInitiated;

  constructor(event: NftOrderInitiated) {
    this._event = event;
  }

  get orderId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get nftHolder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get trader(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get pairIndex(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class NftOrderSameBlock extends ethereum.Event {
  get params(): NftOrderSameBlock__Params {
    return new NftOrderSameBlock__Params(this);
  }
}

export class NftOrderSameBlock__Params {
  _event: NftOrderSameBlock;

  constructor(event: NftOrderSameBlock) {
    this._event = event;
  }

  get nftHolder(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get trader(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pairIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class NumberUpdated extends ethereum.Event {
  get params(): NumberUpdated__Params {
    return new NumberUpdated__Params(this);
  }
}

export class NumberUpdated__Params {
  _event: NumberUpdated;

  constructor(event: NumberUpdated) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OpenLimitCanceled extends ethereum.Event {
  get params(): OpenLimitCanceled__Params {
    return new OpenLimitCanceled__Params(this);
  }
}

export class OpenLimitCanceled__Params {
  _event: OpenLimitCanceled;

  constructor(event: OpenLimitCanceled) {
    this._event = event;
  }

  get trader(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pairIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OpenLimitPlaced extends ethereum.Event {
  get params(): OpenLimitPlaced__Params {
    return new OpenLimitPlaced__Params(this);
  }
}

export class OpenLimitPlaced__Params {
  _event: OpenLimitPlaced;

  constructor(event: OpenLimitPlaced) {
    this._event = event;
  }

  get trader(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pairIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OpenLimitUpdated extends ethereum.Event {
  get params(): OpenLimitUpdated__Params {
    return new OpenLimitUpdated__Params(this);
  }
}

export class OpenLimitUpdated__Params {
  _event: OpenLimitUpdated;

  constructor(event: OpenLimitUpdated) {
    this._event = event;
  }

  get trader(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pairIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newPrice(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get newTp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get newSl(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get maxSlippageP(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get paused(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class SlUpdated extends ethereum.Event {
  get params(): SlUpdated__Params {
    return new SlUpdated__Params(this);
  }
}

export class SlUpdated__Params {
  _event: SlUpdated;

  constructor(event: SlUpdated) {
    this._event = event;
  }

  get trader(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pairIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newSl(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TpUpdated extends ethereum.Event {
  get params(): TpUpdated__Params {
    return new TpUpdated__Params(this);
  }
}

export class TpUpdated__Params {
  _event: TpUpdated;

  constructor(event: TpUpdated) {
    this._event = event;
  }

  get trader(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get pairIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get index(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newTp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class GNSTradingV6_4 extends ethereum.SmartContract {
  static bind(address: Address): GNSTradingV6_4 {
    return new GNSTradingV6_4("GNSTradingV6_4", address);
  }

  _msgSender(): Address {
    let result = super.call("_msgSender", "_msgSender():(address)", []);

    return result[0].toAddress();
  }

  try__msgSender(): ethereum.CallResult<Address> {
    let result = super.tryCall("_msgSender", "_msgSender():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  borrowingFees(): Address {
    let result = super.call("borrowingFees", "borrowingFees():(address)", []);

    return result[0].toAddress();
  }

  try_borrowingFees(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "borrowingFees",
      "borrowingFees():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  delegatedAction(trader: Address, call_data: Bytes): Bytes {
    let result = super.call(
      "delegatedAction",
      "delegatedAction(address,bytes):(bytes)",
      [ethereum.Value.fromAddress(trader), ethereum.Value.fromBytes(call_data)]
    );

    return result[0].toBytes();
  }

  try_delegatedAction(
    trader: Address,
    call_data: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "delegatedAction",
      "delegatedAction(address,bytes):(bytes)",
      [ethereum.Value.fromAddress(trader), ethereum.Value.fromBytes(call_data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  delegations(param0: Address): Address {
    let result = super.call("delegations", "delegations(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_delegations(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "delegations",
      "delegations(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isDone(): boolean {
    let result = super.call("isDone", "isDone():(bool)", []);

    return result[0].toBoolean();
  }

  try_isDone(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isDone", "isDone():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPaused(): boolean {
    let result = super.call("isPaused", "isPaused():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPaused", "isPaused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  marketOrdersTimeout(): BigInt {
    let result = super.call(
      "marketOrdersTimeout",
      "marketOrdersTimeout():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_marketOrdersTimeout(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "marketOrdersTimeout",
      "marketOrdersTimeout():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxPosDai(): BigInt {
    let result = super.call("maxPosDai", "maxPosDai():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxPosDai(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxPosDai", "maxPosDai():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nftRewards(): Address {
    let result = super.call("nftRewards", "nftRewards():(address)", []);

    return result[0].toAddress();
  }

  try_nftRewards(): ethereum.CallResult<Address> {
    let result = super.tryCall("nftRewards", "nftRewards():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pairInfos(): Address {
    let result = super.call("pairInfos", "pairInfos():(address)", []);

    return result[0].toAddress();
  }

  try_pairInfos(): ethereum.CallResult<Address> {
    let result = super.tryCall("pairInfos", "pairInfos():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  referrals(): Address {
    let result = super.call("referrals", "referrals():(address)", []);

    return result[0].toAddress();
  }

  try_referrals(): ethereum.CallResult<Address> {
    let result = super.tryCall("referrals", "referrals():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  storageT(): Address {
    let result = super.call("storageT", "storageT():(address)", []);

    return result[0].toAddress();
  }

  try_storageT(): ethereum.CallResult<Address> {
    let result = super.tryCall("storageT", "storageT():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _storageT(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _nftRewards(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _pairInfos(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _referrals(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _borrowingFees(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _maxPosDai(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _marketOrdersTimeout(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelOpenLimitOrderCall extends ethereum.Call {
  get inputs(): CancelOpenLimitOrderCall__Inputs {
    return new CancelOpenLimitOrderCall__Inputs(this);
  }

  get outputs(): CancelOpenLimitOrderCall__Outputs {
    return new CancelOpenLimitOrderCall__Outputs(this);
  }
}

export class CancelOpenLimitOrderCall__Inputs {
  _call: CancelOpenLimitOrderCall;

  constructor(call: CancelOpenLimitOrderCall) {
    this._call = call;
  }

  get pairIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelOpenLimitOrderCall__Outputs {
  _call: CancelOpenLimitOrderCall;

  constructor(call: CancelOpenLimitOrderCall) {
    this._call = call;
  }
}

export class CloseTradeMarketCall extends ethereum.Call {
  get inputs(): CloseTradeMarketCall__Inputs {
    return new CloseTradeMarketCall__Inputs(this);
  }

  get outputs(): CloseTradeMarketCall__Outputs {
    return new CloseTradeMarketCall__Outputs(this);
  }
}

export class CloseTradeMarketCall__Inputs {
  _call: CloseTradeMarketCall;

  constructor(call: CloseTradeMarketCall) {
    this._call = call;
  }

  get pairIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CloseTradeMarketCall__Outputs {
  _call: CloseTradeMarketCall;

  constructor(call: CloseTradeMarketCall) {
    this._call = call;
  }
}

export class CloseTradeMarketTimeoutCall extends ethereum.Call {
  get inputs(): CloseTradeMarketTimeoutCall__Inputs {
    return new CloseTradeMarketTimeoutCall__Inputs(this);
  }

  get outputs(): CloseTradeMarketTimeoutCall__Outputs {
    return new CloseTradeMarketTimeoutCall__Outputs(this);
  }
}

export class CloseTradeMarketTimeoutCall__Inputs {
  _call: CloseTradeMarketTimeoutCall;

  constructor(call: CloseTradeMarketTimeoutCall) {
    this._call = call;
  }

  get _order(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CloseTradeMarketTimeoutCall__Outputs {
  _call: CloseTradeMarketTimeoutCall;

  constructor(call: CloseTradeMarketTimeoutCall) {
    this._call = call;
  }
}

export class DelegatedActionCall extends ethereum.Call {
  get inputs(): DelegatedActionCall__Inputs {
    return new DelegatedActionCall__Inputs(this);
  }

  get outputs(): DelegatedActionCall__Outputs {
    return new DelegatedActionCall__Outputs(this);
  }
}

export class DelegatedActionCall__Inputs {
  _call: DelegatedActionCall;

  constructor(call: DelegatedActionCall) {
    this._call = call;
  }

  get trader(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get call_data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class DelegatedActionCall__Outputs {
  _call: DelegatedActionCall;

  constructor(call: DelegatedActionCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class DoneCall extends ethereum.Call {
  get inputs(): DoneCall__Inputs {
    return new DoneCall__Inputs(this);
  }

  get outputs(): DoneCall__Outputs {
    return new DoneCall__Outputs(this);
  }
}

export class DoneCall__Inputs {
  _call: DoneCall;

  constructor(call: DoneCall) {
    this._call = call;
  }
}

export class DoneCall__Outputs {
  _call: DoneCall;

  constructor(call: DoneCall) {
    this._call = call;
  }
}

export class ExecuteNftOrderCall extends ethereum.Call {
  get inputs(): ExecuteNftOrderCall__Inputs {
    return new ExecuteNftOrderCall__Inputs(this);
  }

  get outputs(): ExecuteNftOrderCall__Outputs {
    return new ExecuteNftOrderCall__Outputs(this);
  }
}

export class ExecuteNftOrderCall__Inputs {
  _call: ExecuteNftOrderCall;

  constructor(call: ExecuteNftOrderCall) {
    this._call = call;
  }

  get packed(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteNftOrderCall__Outputs {
  _call: ExecuteNftOrderCall;

  constructor(call: ExecuteNftOrderCall) {
    this._call = call;
  }
}

export class OpenTradeCall extends ethereum.Call {
  get inputs(): OpenTradeCall__Inputs {
    return new OpenTradeCall__Inputs(this);
  }

  get outputs(): OpenTradeCall__Outputs {
    return new OpenTradeCall__Outputs(this);
  }
}

export class OpenTradeCall__Inputs {
  _call: OpenTradeCall;

  constructor(call: OpenTradeCall) {
    this._call = call;
  }

  get t(): OpenTradeCallTStruct {
    return changetype<OpenTradeCallTStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get orderType(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get spreadReductionId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get slippageP(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get referrer(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class OpenTradeCall__Outputs {
  _call: OpenTradeCall;

  constructor(call: OpenTradeCall) {
    this._call = call;
  }
}

export class OpenTradeCallTStruct extends ethereum.Tuple {
  get trader(): Address {
    return this[0].toAddress();
  }

  get pairIndex(): BigInt {
    return this[1].toBigInt();
  }

  get index(): BigInt {
    return this[2].toBigInt();
  }

  get initialPosToken(): BigInt {
    return this[3].toBigInt();
  }

  get positionSizeDai(): BigInt {
    return this[4].toBigInt();
  }

  get openPrice(): BigInt {
    return this[5].toBigInt();
  }

  get buy(): boolean {
    return this[6].toBoolean();
  }

  get leverage(): BigInt {
    return this[7].toBigInt();
  }

  get tp(): BigInt {
    return this[8].toBigInt();
  }

  get sl(): BigInt {
    return this[9].toBigInt();
  }
}

export class OpenTradeMarketTimeoutCall extends ethereum.Call {
  get inputs(): OpenTradeMarketTimeoutCall__Inputs {
    return new OpenTradeMarketTimeoutCall__Inputs(this);
  }

  get outputs(): OpenTradeMarketTimeoutCall__Outputs {
    return new OpenTradeMarketTimeoutCall__Outputs(this);
  }
}

export class OpenTradeMarketTimeoutCall__Inputs {
  _call: OpenTradeMarketTimeoutCall;

  constructor(call: OpenTradeMarketTimeoutCall) {
    this._call = call;
  }

  get _order(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class OpenTradeMarketTimeoutCall__Outputs {
  _call: OpenTradeMarketTimeoutCall;

  constructor(call: OpenTradeMarketTimeoutCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveDelegateCall extends ethereum.Call {
  get inputs(): RemoveDelegateCall__Inputs {
    return new RemoveDelegateCall__Inputs(this);
  }

  get outputs(): RemoveDelegateCall__Outputs {
    return new RemoveDelegateCall__Outputs(this);
  }
}

export class RemoveDelegateCall__Inputs {
  _call: RemoveDelegateCall;

  constructor(call: RemoveDelegateCall) {
    this._call = call;
  }
}

export class RemoveDelegateCall__Outputs {
  _call: RemoveDelegateCall;

  constructor(call: RemoveDelegateCall) {
    this._call = call;
  }
}

export class SetDelegateCall extends ethereum.Call {
  get inputs(): SetDelegateCall__Inputs {
    return new SetDelegateCall__Inputs(this);
  }

  get outputs(): SetDelegateCall__Outputs {
    return new SetDelegateCall__Outputs(this);
  }
}

export class SetDelegateCall__Inputs {
  _call: SetDelegateCall;

  constructor(call: SetDelegateCall) {
    this._call = call;
  }

  get delegate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDelegateCall__Outputs {
  _call: SetDelegateCall;

  constructor(call: SetDelegateCall) {
    this._call = call;
  }
}

export class SetMarketOrdersTimeoutCall extends ethereum.Call {
  get inputs(): SetMarketOrdersTimeoutCall__Inputs {
    return new SetMarketOrdersTimeoutCall__Inputs(this);
  }

  get outputs(): SetMarketOrdersTimeoutCall__Outputs {
    return new SetMarketOrdersTimeoutCall__Outputs(this);
  }
}

export class SetMarketOrdersTimeoutCall__Inputs {
  _call: SetMarketOrdersTimeoutCall;

  constructor(call: SetMarketOrdersTimeoutCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMarketOrdersTimeoutCall__Outputs {
  _call: SetMarketOrdersTimeoutCall;

  constructor(call: SetMarketOrdersTimeoutCall) {
    this._call = call;
  }
}

export class SetMaxPosDaiCall extends ethereum.Call {
  get inputs(): SetMaxPosDaiCall__Inputs {
    return new SetMaxPosDaiCall__Inputs(this);
  }

  get outputs(): SetMaxPosDaiCall__Outputs {
    return new SetMaxPosDaiCall__Outputs(this);
  }
}

export class SetMaxPosDaiCall__Inputs {
  _call: SetMaxPosDaiCall;

  constructor(call: SetMaxPosDaiCall) {
    this._call = call;
  }

  get value(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxPosDaiCall__Outputs {
  _call: SetMaxPosDaiCall;

  constructor(call: SetMaxPosDaiCall) {
    this._call = call;
  }
}

export class UpdateOpenLimitOrderCall extends ethereum.Call {
  get inputs(): UpdateOpenLimitOrderCall__Inputs {
    return new UpdateOpenLimitOrderCall__Inputs(this);
  }

  get outputs(): UpdateOpenLimitOrderCall__Outputs {
    return new UpdateOpenLimitOrderCall__Outputs(this);
  }
}

export class UpdateOpenLimitOrderCall__Inputs {
  _call: UpdateOpenLimitOrderCall;

  constructor(call: UpdateOpenLimitOrderCall) {
    this._call = call;
  }

  get pairIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get tp(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get sl(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get maxSlippageP(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class UpdateOpenLimitOrderCall__Outputs {
  _call: UpdateOpenLimitOrderCall;

  constructor(call: UpdateOpenLimitOrderCall) {
    this._call = call;
  }
}

export class UpdateSlCall extends ethereum.Call {
  get inputs(): UpdateSlCall__Inputs {
    return new UpdateSlCall__Inputs(this);
  }

  get outputs(): UpdateSlCall__Outputs {
    return new UpdateSlCall__Outputs(this);
  }
}

export class UpdateSlCall__Inputs {
  _call: UpdateSlCall;

  constructor(call: UpdateSlCall) {
    this._call = call;
  }

  get pairIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get newSl(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateSlCall__Outputs {
  _call: UpdateSlCall;

  constructor(call: UpdateSlCall) {
    this._call = call;
  }
}

export class UpdateTpCall extends ethereum.Call {
  get inputs(): UpdateTpCall__Inputs {
    return new UpdateTpCall__Inputs(this);
  }

  get outputs(): UpdateTpCall__Outputs {
    return new UpdateTpCall__Outputs(this);
  }
}

export class UpdateTpCall__Inputs {
  _call: UpdateTpCall;

  constructor(call: UpdateTpCall) {
    this._call = call;
  }

  get pairIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get newTp(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class UpdateTpCall__Outputs {
  _call: UpdateTpCall;

  constructor(call: UpdateTpCall) {
    this._call = call;
  }
}
